{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "prefix": {
            "defaultValue": "",
            "type": "String"
        },
        "adminUsername": {
            "defaultValue": "s2admin",
            "type": "String"
        },
        "adminPassword": {
            "defaultValue": "S2@dmins2@dmin",
            "type": "String"
        },
        "location" : {
            "type": "string",
            "allowedValues": [
                "eastus",
                "eastus2",
                "westus",
                "westus2"
            ],
            "defaultValue": "eastus2",
            "metadata": {
                "description": "The primary location."
            }
        }
    },
    "variables": {
        "unique" : "[uniqueString(resourceGroup().id)]",
        "location" : "[parameters('location')]",
        "dns-domain" : "[concat(parameters('prefix'),'privatedns.com')]",
        "linuxFxVersion": "JAVA|11-java11",
        "alwaysOn": "true",
        "vault-name": "[concat(parameters('prefix'),'-kv-', variables('unique'))]",
        "vm_redis01_name": "[concat(parameters('prefix'),'-redis01')]",
        "vm_redis02_name": "[concat(parameters('prefix'),'-redis02')]",
        "vm_win10_name": "[concat(parameters('prefix'),'-vm-win10')]",
        "app_name": "[concat(parameters('prefix'),'-app01')]",
        "insights-name": "[concat(parameters('prefix'),'-insights')]",
        "redis-name": "[concat(parameters('prefix'),'-redis')]",
        "vm-win10-ip": "[concat(parameters('prefix'),'-vm-ip-01')]",
        "vm-redis01-ip": "[concat(parameters('prefix'),'-vm-redis01-ip')]",
        "vm-redis02-ip": "[concat(parameters('prefix'),'-vm-redis02-ip')]",
        "vnet-app01": "[concat(parameters('prefix'),'-vnet-app01')]",
        "vnet-hub": "[concat(parameters('prefix'),'-vnet-hub')]",
        "vnet-redis": "[concat(parameters('prefix'),'-vnet-redis')]",
        "nsg-hub": "[concat(parameters('prefix'),'-nsg-hub')]",
        "nsg-redis": "[concat(parameters('prefix'),'-nsg-redis')]",
        "vm-nic-01": "[concat(parameters('prefix'),'-vm-nic-01')]",
        "vm-nic-02": "[concat(parameters('prefix'),'-vm-nic-02')]",
        "vm-nic-03": "[concat(parameters('prefix'),'-vm-nic-03')]",
        "vnetData": "",
        "vnetDataSet": "[if(empty(variables('vnetData')), json('{ \"subnetArmResourceId\": \"\" }'), variables('vnetData'))]",
        "finalVnetData": "[json(concat('{ \"SubnetArmResourceId\": \"', variables('vnetDataSet').subnetArmResourceId, '\"}'))]",
        "azureSubscriptionID": "[subscription().subscriptionId]",
        "azureTenantID": "[subscription().tenantId]",
        "azureUsername": "[parameters('adminUsername')]",
        "azurePassword": "[parameters('adminPassword')]",
        "rgName": "[resourceGroup().name]",
        "postInstallParameters": "[concat(' -azureUsername ', variables('azureUsername'), ' -azurePassword ', variables('azurePassword'), ' -azureTenantID ', variables('azureTenantID'), ' -azureSubscriptionID ', variables('azureSubscriptionID'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-04-01",
            "name": "[concat(parameters('prefix'),'redisstorage')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            },
            "resources": [
                {
                  "type": "blobServices/containers",
                  "apiVersion": "2019-06-01",
                  "name": "default/redis",
                  "dependsOn": [
                    "[concat(parameters('prefix'),'redisstorage')]"
                  ]
                }
              ]
        },
        {
            "type": "Microsoft.Cache/Redis",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('redis-name'),'-basic4')]",
            "location": "[variables('location')]",
            "properties": {
                "redisVersion": "4",
                "sku": {
                    "name": "Basic",
                    "family": "C",
                    "capacity": 0
                },
                "enableNonSslPort": false,
                "publicNetworkAccess": "Enabled",
                "redisConfiguration": {
                    
                }
            }
        },
        {
            "type": "Microsoft.Cache/Redis",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('redis-name'),'-basic6')]",
            "location": "[variables('location')]",
            "properties": {
                "redisVersion": "6",
                "sku": {
                    "name": "Basic",
                    "family": "C",
                    "capacity": 0
                },
                "enableNonSslPort": false,
                "publicNetworkAccess": "Enabled",
                "redisConfiguration": {
                    
                }
            }
        },
        {
            "type": "Microsoft.Cache/Redis",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('redis-name'),'-std')]",
            "location": "[variables('location')]",
            "properties": {
                "redisVersion": "4",
                "sku": {
                    "name": "Standard",
                    "family": "C",
                    "capacity": 0
                },
                "enableNonSslPort": false,
                "publicNetworkAccess": "Enabled",
                "redisConfiguration": {
                    
                }
            }
        },
        {
            "type": "Microsoft.Cache/Redis",
            "apiVersion": "2020-12-01",
            "name": "[concat(variables('redis-name'),'-prem')]",
            "location": "[variables('location')]",
            "properties": {
                "redisVersion": "6",
                "sku": {
                    "name": "Premium",
                    "family": "P",
                    "capacity": 1
                },
                "enableNonSslPort": false,
                "publicNetworkAccess": "Enabled",
                "redisConfiguration": {
                    
                }
            }
        },
        {
            "type": "Microsoft.Cache/redisEnterprise",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(variables('redis-name'),'-ent')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Enterprise_E10",
                "capacity": 2
            },
            "properties": {
            },
            "resources": [
                {
                    "type": "Microsoft.Cache/redisEnterprise/databases",
                    "apiVersion": "2021-02-01-preview",
                    "name": "[concat(concat(variables('redis-name'),'-ent'), '/default')]",
                    "dependsOn": [
                        "[concat('Microsoft.Cache/redisEnterprise/', variables('redis-name'),'-ent')]"
                    ],
                    "tags": {},
                    "properties": {
                        "clientProtocol": "Encrypted",
                        "evictionPolicy": "NoEviction",
                        "clusteringPolicy": "OSSCluster",
                        "persistence": {
                            "aofEnabled": false,
                            "rdbEnabled": false
                        }
                    }
                }
            ]
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2018-05-01-preview",
            "name": "[variables('insights-name')]",
            "location": "[variables('location')]",
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Request_Source": "IbizaWebAppExtensionCreate",
                "RetentionInDays": 90,
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('prefix'), 'privatedns.com')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 1,
                "numberOfVirtualNetworkLinksWithRegistration": 0
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('prefix'), 'privatedns.com', '/', parameters('prefix'), '-redis-basic4')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', concat(parameters('prefix'), 'privatedns.com'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": ""
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.5.0.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('prefix'), 'privatedns.com', '/', parameters('prefix'), '-redis-basic6')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', concat(parameters('prefix'), 'privatedns.com'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": ""
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.5.0.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('prefix'), 'privatedns.com', '/', parameters('prefix'), '-redis-std')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', concat(parameters('prefix'), 'privatedns.com'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": ""
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.5.0.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('prefix'), 'privatedns.com', '/', parameters('prefix'), '-redis-prem')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', concat(parameters('prefix'), 'privatedns.com'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": ""
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.5.0.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('prefix'), 'privatedns.com', '/', parameters('prefix'), '-redis-ent')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', concat(parameters('prefix'), 'privatedns.com'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": ""
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.7.0.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('prefix'), 'privatedns.com', '/', parameters('prefix'), '-redis-ent.eastus2.redisenterprise.cache.azure.net')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', concat(parameters('prefix'), 'privatedns.com'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": ""
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.7.0.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('prefix'), 'privatedns.com', '/', parameters('prefix'), '-redis01')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', concat(parameters('prefix'), 'privatedns.com'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": ""
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.7.0.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('prefix'), 'privatedns.com', '/', parameters('prefix'), '-redis02')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', concat(parameters('prefix'), 'privatedns.com'))]"
            ],
            "properties": {
                "metadata": {
                    "creator": ""
                },
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.7.0.5"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('prefix'), 'privatedns.com', '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', concat(parameters('prefix'), 'privatedns.com'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1,
                    "minimumTtl": 10
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('prefix'), '-vnet-hub', '/appGateway')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', concat(parameters('prefix'), '-vnet-hub'))]"
            ],
            "properties": {
                "addressPrefix": "10.5.1.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('prefix'), '-vnet-app01', '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', concat(parameters('prefix'), '-vnet-app01'))]"
            ],
            "properties": {
                "addressPrefix": "10.6.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('vnet-redis'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet-redis'))]"
            ],
            "properties": {
                "addressPrefix": "10.7.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('prefix'), '-vnet-app01')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.6.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.6.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "app01-to-hub",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id" : "[resourceId('Microsoft.Network/virtualNetworks', concat(parameters('prefix'), '-vnet-hub'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.5.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            },
            "resources": [
                {
                    "apiVersion": "2020-05-01",
                    "type": "virtualNetworkPeerings",
                    "name": "app01-to-hub",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet-app01'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet-hub'))]"
                    ],
                    "comments": "app01 to hub",
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet-hub'))]"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(variables('vnet-hub'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet-hub'))]"
            ],
            "properties": {
                "addressPrefix": "10.5.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('prefix'), '-vnet-hub')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.5.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.5.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "appGateway",
                        "properties": {
                            "addressPrefix": "10.5.1.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false,
                "enableVmProtection": false
            },
            "resources": [
                {
                    "apiVersion": "2020-05-01",
                    "type": "virtualNetworkPeerings",
                    "name": "hub-to-app01",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet-app01'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet-hub'))]"
                    ],
                    "comments": "hub to app01",
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnet-app01'))]"
                        }
                    }
                },
                {
                    "apiVersion": "2020-05-01",
                    "type": "virtualNetworkPeerings",
                    "name": "hub-to-redis",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet-redis'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet-hub'))]"
                    ],
                    "comments": "hub to redis",
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnet-redis'))]"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[variables('vnet-redis')]",
            "location": "[variables('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.7.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.7.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "Redis-to-hub",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id" : "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet-hub'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": false,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.5.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            },
            "resources": [
                {
                    "apiVersion": "2020-05-01",
                    "type": "virtualNetworkPeerings",
                    "name": "redis-to-hub",
                    "location": "[variables('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet-redis'))]",
                        "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet-hub'))]"
                    ],
                    "comments": "redis to hub",
                    "properties": {
                        "allowVirtualNetworkAccess": true,
                        "allowForwardedTraffic": false,
                        "allowGatewayTransit": false,
                        "useRemoteGateways": false,
                        "remoteVirtualNetwork": {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnet-hub'))]"
                        }
                    }
                }
            ]
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2020-08-01",
            "name": "[concat(parameters('prefix'), '-redis-logs')]",
            "location": "[variables('location')]",
            "properties": {
                "sku": {
                    "name": "pergb2018"
                },
                "retentionInDays": 30,
                "workspaceCapping": {
                    "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "name": "[concat(parameters('prefix'), '-appsvc')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "P1v2",
                "tier": "PremiumV2",
                "size": "P1v2",
                "family": "Pv2",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "workerSize": 3,
                "workerSizeId": 3,
                "numberOfWorkers": 2,
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[variables('nsg-hub')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 310,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[variables('nsg-redis')]",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 310,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Redis",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "6379",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 400,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "RedisCluster",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "16379",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 410,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "RedisCluster30001",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "30001",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 420,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[variables('vm-redis01-ip')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "52.229.24.92",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[variables('vm-redis02-ip')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "ipAddress": "52.183.7.200",
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "name": "[variables('vm-win10-ip')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "Basic",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "name": "[variables('vm_redis01_name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vm-nic-03'))]"
            ],
            "resources" : [
                {
                    "name": "config-redis-01",
                    "type": "extensions",
                    "location": "[variables('location')]",
                    "apiVersion": "2019-03-01",
                    "dependsOn": [
                        "[concat('Microsoft.Compute/virtualMachines/', variables('vm_redis01_name'))]"
                    ],
                    "tags": {
                        "displayName": "config-redis-01"
                    },
                    "properties": {
                        "publisher": "Microsoft.Azure.Extensions",
                        "type": "CustomScript",
                        "typeHandlerVersion": "2.1",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                        "skipDos2Unix":false,
                        "timestamp":123456789          
                        },
                        "protectedSettings": {
                            "commandToExecute": "sh post-install-script01.sh",
                            "fileUris": [
                            "https://raw.githubusercontent.com/solliancenet/common-workshop/main/scripts/post-install-script01.sh"
                                ],
                            "managedIdentity" : {}
                        }
                    }
                }
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(variables('vm_redis01_name'), '_os_disk1')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "cjg-redis-01",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm-nic-03'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "name": "[variables('vm_redis02_name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vm-nic-02'))]"
            ],
            "resources" : [
            {
                "name": "config-redis-01",
                "type": "extensions",
                "location": "[variables('location')]",
                "apiVersion": "2019-03-01",
                "dependsOn": [
                    "[concat('Microsoft.Compute/virtualMachines/', variables('vm_redis02_name'))]"
                ],
                "tags": {
                    "displayName": "config-redis-01"
                },
                "properties": {
                    "publisher": "Microsoft.Azure.Extensions",
                    "type": "CustomScript",
                    "typeHandlerVersion": "2.1",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                    "skipDos2Unix":false,
                    "timestamp":123456789          
                    },
                    "protectedSettings": {
                        "commandToExecute": "sh post-install-script01.sh",
                        "fileUris": [
                        "https://raw.githubusercontent.com/solliancenet/common-workshop/main/scripts/post-install-script01.sh"
                            ],
                        "managedIdentity" : {}
                    }
                }
                }
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "18_04-lts-gen2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Linux",
                        "name": "[concat(variables('vm_redis02_name'), '_os_disk1')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "diskSizeGB": 30
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "cjg-redis-02",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": false,
                        "provisionVMAgent": true,
                        "patchSettings": {
                            "patchMode": "ImageDefault",
                            "assessmentMode": "ImageDefault"
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm-nic-02'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2020-12-01",
            "name": "[variables('vm_win10_name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('vm-nic-01'))]"
            ],
            "resources": [
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(variables('vm_win10_name'),'/', 'winExtension')]",
                    "apiVersion": "2015-06-15",
                    "location": "[variables('location')]",
                    "comments": "Script",
                    "tags": {
                    "displayName": "VM Extension"
                    },
                    "dependsOn": [
                    "[concat('Microsoft.Compute/virtualMachines/', variables('vm_win10_name'))]"
                    ],
                    "properties": {
                    "publisher": "Microsoft.Compute",
                    "type": "CustomScriptExtension",
                    "typeHandlerVersion": "1.8",
                    "autoUpgradeMinorVersion": true,
                    "settings": {
                        "fileUris": [
                            "https://raw.githubusercontent.com/solliancenet/microsoft-redis-cache-migration/main/artifacts/post-install-script01.ps1"
                        ]
                    },
                    "protectedSettings": {
                        "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File post-install-script01.ps1 ', variables('postInstallParameters'))]"
                    }
                }
            }],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_D2s_v3"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsDesktop",
                        "offer": "Windows-10",
                        "sku": "20h1-pro-g2",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(variables('vm_win10_name'), '_os_disk1')]",
                        "createOption": "FromImage",
                        "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        },
                        "diskSizeGB": 200
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[variables('vm_win10_name')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true,
                        "patchSettings": {
                            "patchMode": "AutomaticByOS",
                            "enableHotpatching": false
                        }
                    },
                    "secrets": [],
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm-nic-01'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[variables('vm-nic-01')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm-win10-ip'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-hub'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg-hub'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "10.2.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm-win10-ip'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-hub'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg-hub'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[variables('vm-nic-02')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-redis'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg-redis'))]"
            ],
            "tags": {
                
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAddress": "10.2.0.5",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm-redis01-ip'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-redis'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg-redis'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[variables('vm-nic-03')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-redis'), 'default')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg-redis'))]"
            ],
            "tags": {
                
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAddress": "10.2.0.6",
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm-redis02-ip'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-redis'), 'default')]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg-redis'))]"
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "name": "[variables('app_name')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', concat(parameters('prefix'), '-appsvc'))]"
            ],
            "kind": "app",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('app_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('app_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', concat(parameters('prefix'), '-appsvc'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "appSettings": [],
                    "linuxFxVersion": "[variables('linuxFxVersion')]",
                    "alwaysOn": "[variables('alwaysOn')]"
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None"
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2018-11-01",
            "name": "[concat(variables('app_name'), '/web')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('app_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "nodeVersion": "12.13.0",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$cjg-app01",
                "azureStorageAccounts": {},
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": true,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": true
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "reservedInstanceCount": 0
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2018-11-01",
            "name": "[concat(variables('app_name'), '/', variables('app_name'), '.azurewebsites.net')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('app_name'))]"
            ],
            "properties": {
                "siteName": "[variables('app_name')]",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-11-01",
            "name": "[concat(variables('app_name'),'-pe')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('app_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-app01'), 'default')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(variables('app_name'), '-pe')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', variables('app_name'))]",
                            "groupIds": [
                                "sites"
                            ],
                            "privateLinkServiceConnectionState": {
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-app01'), 'default')]"
                },
                "customDnsConfigs": [
                    {
                        "fqdn": "[concat(variables('app_name'), '.azurewebsites.net')]",
                        "ipAddresses": [
                            "10.7.0.4"
                        ]
                    },
                    {
                        "fqdn": "concat(variables('app_name'), '.scm.azurewebsites.net')",
                        "ipAddresses": [
                            "10.7.0.4"
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-11-01",
            "name": "[concat(variables('redis-name'),'-basic4', '-pe')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', concat(variables('redis-name'),'-basic4'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-redis'), 'default')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(variables('redis-name'),'-basic4', '-pe')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Cache/Redis', concat(variables('redis-name'),'-basic4'))]",
                            "groupIds": [
                                "redisCache"
                            ],
                            "privateLinkServiceConnectionState": {
                                "description": "Auto-Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-redis'), 'default')]"
                },
                "customDnsConfigs": [
                    {
                        "fqdn": "[concat(variables('redis-name'),'-basic4', parameters('prefix'), 'privatedns.com')]",
                        "ipAddresses": [
                            "10.7.0.4"
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-11-01",
            "name": "[concat(variables('redis-name'),'-basic6', '-pe')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', concat(variables('redis-name'),'-basic6'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-redis'), 'default')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(variables('redis-name'),'-basic6', '-pe')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Cache/Redis', concat(variables('redis-name'),'-basic6'))]",
                            "groupIds": [
                                "redisCache"
                            ],
                            "privateLinkServiceConnectionState": {
                                "description": "Auto-Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-redis'), 'default')]"
                },
                "customDnsConfigs": [
                    {
                        "fqdn": "[concat(variables('redis-name'),'-basic6', parameters('prefix'), 'privatedns.com')]",
                        "ipAddresses": [
                            "10.7.0.5"
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-11-01",
            "name": "[concat(variables('redis-name'),'-std', '-pe')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', concat(variables('redis-name'),'-std'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-redis'), 'default')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(variables('redis-name'),'-std', '-pe')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Cache/Redis', concat(variables('redis-name'),'-std'))]",
                            "groupIds": [
                                "redisCache"
                            ],
                            "privateLinkServiceConnectionState": {
                                "description": "Auto-Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-redis'), 'default')]"
                },
                "customDnsConfigs": [
                    {
                        "fqdn": "[concat(variables('redis-name'),'-prem', parameters('prefix'), 'privatedns.com')]",
                        "ipAddresses": [
                            "10.7.0.6"
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-11-01",
            "name": "[concat(variables('redis-name'),'-prem', '-pe')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', concat(variables('redis-name'),'-prem'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-redis'), 'default')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(variables('redis-name'),'-prem', '-pe')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Cache/Redis', concat(variables('redis-name'),'-prem'))]",
                            "groupIds": [
                                "redisCache"
                            ],
                            "privateLinkServiceConnectionState": {
                                "description": "Auto-Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-redis'), 'default')]"
                },
                "customDnsConfigs": [
                    {
                        "fqdn": "[concat(variables('redis-name'),'-prem', parameters('prefix'), 'privatedns.com')]",
                        "ipAddresses": [
                            "10.7.0.6"
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-11-01",
            "name": "[concat(variables('redis-name'),'-ent', '-pe')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/redisEnterprise', concat(variables('redis-name'),'-ent'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-redis'), 'default')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(variables('redis-name'),'-ent', '-pe')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Cache/redisEnterprise', concat(variables('redis-name'),'-ent'))]",
                            "groupIds": [
                                "redisEnterprise"
                            ],
                            "privateLinkServiceConnectionState": {
                                "description": "Auto-Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet-redis'), 'default')]"
                },
                "customDnsConfigs": [
                    {
                        "fqdn": "[concat(variables('redis-name'),'-ent', parameters('prefix'), 'privatedns.com')]",
                        "ipAddresses": [
                            "10.7.0.7"
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('prefix'), 'privatedns.com', '/', variables('vnet-redis'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', concat(parameters('prefix'), 'privatedns.com'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet-redis'))]"
            ],
            "properties": {
                "registrationEnabled": true,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet-redis'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('prefix'), 'privatedns.com', '/', variables('vnet-hub'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', concat(parameters('prefix'), 'privatedns.com'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet-hub'))]"
            ],
            "properties": {
                "registrationEnabled": true,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet-hub'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('prefix'), 'privatedns.com', '/', variables('vnet-app01'))]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', concat(parameters('prefix'), 'privatedns.com'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet-app01'))]"
            ],
            "properties": {
                "registrationEnabled": true,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet-app01'))]"
                }
            }
        }
    ]
}